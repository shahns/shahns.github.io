{"version":3,"sources":["webpack:///./src/pages/projects/index.js"],"names":["StyledMainContainer","styled","main","theme","mixins","flexBetween","StyledGrid","div","StyledPostInner","boxShadow","StyledPost","StyledPostHeader","StyledFolder","StyledPostName","h5","StyledPostDescription","StyledDate","span","StyledTags","ul","PensievePage","location","posts","data","allMarkdownRemark","edges","title","className","length","map","i","frontmatter","node","description","slug","date","tags","d","Date","key","tabIndex","to","toLocaleDateString","tag","kebabCase","pageQuery"],"mappings":"2FAAA,2JASMA,EAAsBC,IAAOC,KAAV,oFAAGD,CAAH,2TAgBnB,qBAAGE,MAAkBC,OAAOC,eAK5BC,EAAaL,IAAOM,IAAV,2EAAGN,CAAH,0NAcVO,EAAkBP,IAAOM,IAAV,gFAAGN,CAAH,sOACjB,qBAAGE,MAAkBC,OAAOK,aAC5B,qBAAGN,MAAkBC,OAAOC,eAe1BK,EAAaT,IAAOM,IAAV,2EAAGN,CAAH,4GAOVO,GAKAG,EAAmBV,IAAOM,IAAV,iFAAGN,CAAH,6BAClB,qBAAGE,MAAkBC,OAAOC,eAG1BO,EAAeX,IAAOM,IAAV,6EAAGN,CAAH,qDAOZY,EAAiBZ,IAAOa,GAAV,+EAAGb,CAAH,0EAKdc,EAAwBd,IAAOM,IAAV,sFAAGN,CAAH,8CAIrBe,EAAaf,IAAOgB,KAAV,2EAAGhB,CAAH,6GAMViB,EAAajB,IAAOkB,GAAV,2EAAGlB,CAAH,+NAyFDmB,UArEM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAChBC,EADqC,EAAXC,KACbC,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQJ,SAAUA,GAChB,kBAAC,IAAD,CAAQK,MAAM,oBAEd,kBAAC1B,EAAD,KACE,gCACE,wBAAI2B,UAAU,eAAd,oBAQF,kBAACrB,EAAD,KACE,yBAAKqB,UAAU,SACZL,EAAMM,OAAS,GACdN,EAAMO,KAAI,WAAWC,GAAO,IAClBC,EADiB,EAAdC,KACHD,YACAL,EAAyCK,EAAzCL,MAAOO,EAAkCF,EAAlCE,YAAaC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAClCC,EAAI,IAAIC,KAAKH,GAEnB,OACE,kBAACzB,EAAD,CAAY6B,IAAKT,EAAGU,SAAS,KAC3B,kBAAChC,EAAD,KACE,gCACE,kBAAC,OAAD,CAAMiC,GAAIP,GACR,kBAACvB,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACC,EAAD,KAAiBa,GACjB,kBAACX,EAAD,KAAwBkB,KAG5B,gCACE,kBAACjB,EAAD,QAAgBqB,EAAEK,sBAClB,kBAACxB,EAAD,KACGkB,EAAKP,KAAI,SAACc,EAAKb,GAAN,OACR,wBAAIS,IAAKT,GACP,kBAAC,OAAD,CACEW,GAAE,kBAAoBG,IAAUD,GAA9B,IACFhB,UAAU,eAFZ,IAGIgB,mBAwB3B,IAAME,EAAS","file":"component---src-pages-projects-index-js-eac358560b5f7a1f4971.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport styled from 'styled-components';\r\nimport { Layout } from '@components';\r\nimport { IconZap } from '@components/icons';\r\n\r\nconst StyledMainContainer = styled.main`\r\n  & > header {\r\n    margin-bottom: 100px;\r\n    text-align: center;\r\n\r\n    a {\r\n      &:hover,\r\n      &:focus {\r\n        cursor: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>âš¡</text></svg>\")\r\n            20 0,\r\n          auto;\r\n      }\r\n    }\r\n  }\r\n\r\n  footer {\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    width: 100%;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\nconst StyledGrid = styled.div`\r\n  margin-top: 50px;\r\n\r\n  .posts {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    grid-gap: 15px;\r\n    position: relative;\r\n\r\n    @media (max-width: 1080px) {\r\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    }\r\n  }\r\n`;\r\nconst StyledPostInner = styled.div`\r\n  ${({ theme }) => theme.mixins.boxShadow};\r\n  ${({ theme }) => theme.mixins.flexBetween};\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  position: relative;\r\n  height: 100%;\r\n  padding: 2rem 1.75rem;\r\n  border-radius: var(--border-radius);\r\n  transition: var(--transition);\r\n  background-color: var(--light-navy);\r\n\r\n  header,\r\n  a {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst StyledPost = styled.div`\r\n  transition: var(--transition);\r\n  cursor: default;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    outline: 0;\r\n    ${StyledPostInner} {\r\n      transform: translateY(-5px);\r\n    }\r\n  }\r\n`;\r\nconst StyledPostHeader = styled.div`\r\n  ${({ theme }) => theme.mixins.flexBetween};\r\n  margin-bottom: 30px;\r\n`;\r\nconst StyledFolder = styled.div`\r\n  color: var(--green);\r\n  svg {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`;\r\nconst StyledPostName = styled.h5`\r\n  margin: 0 0 10px;\r\n  color: var(--lightest-slate);\r\n  font-size: var(--fz-xxl);\r\n`;\r\nconst StyledPostDescription = styled.div`\r\n  color: var(--light-slate);\r\n  font-size: 17px;\r\n`;\r\nconst StyledDate = styled.span`\r\n  color: var(--light-slate);\r\n  font-family: var(--font-mono);\r\n  font-size: var(--fz-xxs);\r\n  text-transform: uppercase;\r\n`;\r\nconst StyledTags = styled.ul`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-wrap: wrap;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n\r\n  li {\r\n    color: var(--green);\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-xxs);\r\n    line-height: 1.75;\r\n\r\n    &:not(:last-of-type) {\r\n      margin-right: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PensievePage = ({ location, data }) => {\r\n  const posts = data.allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Helmet title=\"Project Archive\" />\r\n\r\n      <StyledMainContainer>\r\n        <header>\r\n          <h1 className=\"big-heading\">Project Archive</h1>\r\n          {/* <p className=\"subtitle\">\r\n            <a href=\"https://www.wizardingworld.com/writing-by-jk-rowling/pensieve\">\r\n              a collection of memories\r\n            </a>\r\n          </p> */}\r\n        </header>\r\n\r\n        <StyledGrid>\r\n          <div className=\"posts\">\r\n            {posts.length > 0 &&\r\n              posts.map(({ node }, i) => {\r\n                const { frontmatter } = node;\r\n                const { title, description, slug, date, tags } = frontmatter;\r\n                const d = new Date(date);\r\n\r\n                return (\r\n                  <StyledPost key={i} tabIndex=\"0\">\r\n                    <StyledPostInner>\r\n                      <header>\r\n                        <Link to={slug}>\r\n                          <StyledPostHeader>\r\n                            <StyledFolder>\r\n                              <IconZap />\r\n                            </StyledFolder>\r\n                          </StyledPostHeader>\r\n                          <StyledPostName>{title}</StyledPostName>\r\n                          <StyledPostDescription>{description}</StyledPostDescription>\r\n                        </Link>\r\n                      </header>\r\n                      <footer>\r\n                        <StyledDate>{`${d.toLocaleDateString()}`}</StyledDate>\r\n                        <StyledTags>\r\n                          {tags.map((tag, i) => (\r\n                            <li key={i}>\r\n                              <Link\r\n                                to={`/projects/tags/${kebabCase(tag)}/`}\r\n                                className=\"inline-link\">\r\n                                #{tag}\r\n                              </Link>\r\n                            </li>\r\n                          ))}\r\n                        </StyledTags>\r\n                      </footer>\r\n                    </StyledPostInner>\r\n                  </StyledPost>\r\n                );\r\n              })}\r\n          </div>\r\n        </StyledGrid>\r\n      </StyledMainContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPensievePage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PensievePage;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/projects/\" }\r\n        frontmatter: { draft: { ne: true } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description\r\n            slug\r\n            date\r\n            tags\r\n            draft\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}